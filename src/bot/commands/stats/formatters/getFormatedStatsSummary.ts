import {formatDuration, formatWord} from '@utils'

import type { UserStats } from '../types'

export function getFormatedStatsSummary(stats: UserStats): string {
  const lines: string[] = []

  const {
    totalComments,
    totalBugsResolved,
    totalAdditions,
    totalDeletions,
    totalFilesChanged,
    longestTaskDurationSeconds,

    topCommentTask,
    topBugTask,
    topAdditionsTask,
    topDeletionsTask,
    topFilesChangedTask
  } = stats

  if (totalComments > 0) {
    lines.push(`üí¨ –¢—ã –æ—Å—Ç–∞–≤–∏–ª **${totalComments}** ${formatWord(totalComments, '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è', '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤')}`)
    if (topCommentTask?.taskUrl) {
      lines.push(
        `üîù –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–π ‚Äî –≤ –∑–∞–¥–∞—á–µ [#${topCommentTask.taskId}](${topCommentTask.taskUrl}) üòÑ`
      )
    }
  }

  if (totalBugsResolved > 0) {
    lines.push(
      `\nü™≤ –£–Ω–∏—á—Ç–æ–∂–µ–Ω–æ **${totalBugsResolved}** –±–∞–≥${totalBugsResolved > 1 ? '–æ–≤' : ''}!`
    )
    if (topBugTask?.taskUrl) {
      lines.push(
        `üîß –°–∞–º–∞—è –±–∞–≥–æ–≤–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî [#${topBugTask.taskId}](${topBugTask.taskUrl}) üõ†`
      )
    }
  }

  if (totalAdditions + totalDeletions > 0) {
    lines.push(
      `\n‚ûï‚ûñ –¢—ã –ø–æ–∫–æ–ª–¥–æ–≤–∞–ª –Ω–∞–¥ –∫–æ–¥–æ–º: **${totalAdditions}** —Å—Ç—Ä–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–æ, **${totalDeletions}** —É–¥–∞–ª–µ–Ω–æ!`
    )
    if (topAdditionsTask?.taskUrl) {
      lines.push(
        `üìà –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –≤ [#${topAdditionsTask.taskId}](${topAdditionsTask.taskUrl}) üöÄ`
      )
    }
    if (topDeletionsTask?.taskUrl) {
      lines.push(
        `üìâ –ê –≤–æ—Ç –∏ –±–æ–ª—å—à–∞—è —á–∏—Å—Ç–∫–∞ ‚Äî [#${topDeletionsTask.taskId}](${topDeletionsTask.taskUrl}) üßπ`
      )
    }
  }

  if (totalFilesChanged > 0) {
    lines.push(`\nüìÇ –ó–∞—Ç—Ä–æ–Ω—É—Ç–æ **${totalFilesChanged}** —Ñ–∞–π–ª–æ–≤`)
    if (topFilesChangedTask?.taskUrl) {
      lines.push(
        `üóÇ –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî –≤ [#${topFilesChangedTask.taskId}](${topFilesChangedTask.taskUrl})`
      )
    }
  }

  if (longestTaskDurationSeconds > 0) {
    lines.push(
      `\n‚è± –°–∞–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞: **${formatDuration(longestTaskDurationSeconds)}** ‚Äî —Ç—ã –Ω–µ —Å–¥–∞–ª—Å—è, –º–æ–ª–æ–¥–µ—Ü! üèÅ`
    )
  }

  if (lines.length === 0) {
    return 'üì≠ –ü–æ–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞... –ù–æ –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏! –°–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ—è–≤–∏—Ç—å —Å–µ–±—è üí™'
  }

  return lines.join('\n')
}
